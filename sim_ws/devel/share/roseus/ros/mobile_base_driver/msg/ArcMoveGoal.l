;; Auto-generated. Do not edit!


(when (boundp 'mobile_base_driver::ArcMoveGoal)
  (if (not (find-package "MOBILE_BASE_DRIVER"))
    (make-package "MOBILE_BASE_DRIVER"))
  (shadow 'ArcMoveGoal (find-package "MOBILE_BASE_DRIVER")))
(unless (find-package "MOBILE_BASE_DRIVER::ARCMOVEGOAL")
  (make-package "MOBILE_BASE_DRIVER::ARCMOVEGOAL"))

(in-package "ROS")
;;//! \htmlinclude ArcMoveGoal.msg.html


(defclass mobile_base_driver::ArcMoveGoal
  :super ros::object
  :slots (_arc_len _linear_velocity _angle _angular_velocity _duration ))

(defmethod mobile_base_driver::ArcMoveGoal
  (:init
   (&key
    ((:arc_len __arc_len) 0.0)
    ((:linear_velocity __linear_velocity) 0.0)
    ((:angle __angle) 0.0)
    ((:angular_velocity __angular_velocity) 0.0)
    ((:duration __duration) 0.0)
    )
   (send-super :init)
   (setq _arc_len (float __arc_len))
   (setq _linear_velocity (float __linear_velocity))
   (setq _angle (float __angle))
   (setq _angular_velocity (float __angular_velocity))
   (setq _duration (float __duration))
   self)
  (:arc_len
   (&optional __arc_len)
   (if __arc_len (setq _arc_len __arc_len)) _arc_len)
  (:linear_velocity
   (&optional __linear_velocity)
   (if __linear_velocity (setq _linear_velocity __linear_velocity)) _linear_velocity)
  (:angle
   (&optional __angle)
   (if __angle (setq _angle __angle)) _angle)
  (:angular_velocity
   (&optional __angular_velocity)
   (if __angular_velocity (setq _angular_velocity __angular_velocity)) _angular_velocity)
  (:duration
   (&optional __duration)
   (if __duration (setq _duration __duration)) _duration)
  (:serialization-length
   ()
   (+
    ;; float32 _arc_len
    4
    ;; float32 _linear_velocity
    4
    ;; float32 _angle
    4
    ;; float32 _angular_velocity
    4
    ;; float32 _duration
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float32 _arc_len
       (sys::poke _arc_len (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _linear_velocity
       (sys::poke _linear_velocity (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _angle
       (sys::poke _angle (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _angular_velocity
       (sys::poke _angular_velocity (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _duration
       (sys::poke _duration (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float32 _arc_len
     (setq _arc_len (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _linear_velocity
     (setq _linear_velocity (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _angle
     (setq _angle (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _angular_velocity
     (setq _angular_velocity (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _duration
     (setq _duration (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get mobile_base_driver::ArcMoveGoal :md5sum-) "49b394402086123603ca274f830ff69c")
(setf (get mobile_base_driver::ArcMoveGoal :datatype-) "mobile_base_driver/ArcMoveGoal")
(setf (get mobile_base_driver::ArcMoveGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
float32 arc_len
float32 linear_velocity
float32 angle
float32 angular_velocity
float32 duration

")



(provide :mobile_base_driver/ArcMoveGoal "49b394402086123603ca274f830ff69c")


